{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["let userSelectedDate = null;\nconst startButton = document.querySelector('button[data-start]');\nconst datetimePicker = document.getElementById('datetime-picker');\nconst timerFields = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startButton.disabled = true;\n    } else {\n      startButton.disabled = false;\n    }\n  },\n};\n\nflatpickr(datetimePicker, options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  timerFields.days.textContent = addLeadingZero(days);\n  timerFields.hours.textContent = addLeadingZero(hours);\n  timerFields.minutes.textContent = addLeadingZero(minutes);\n  timerFields.seconds.textContent = addLeadingZero(seconds);\n}\n\nfunction startTimer() {\n  const intervalId = setInterval(() => {\n    const now = new Date();\n    const timeRemaining = userSelectedDate - now;\n\n    if (timeRemaining <= 0) {\n      clearInterval(intervalId);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      datetimePicker.disabled = false;\n      startButton.disabled = true;\n      return;\n    }\n\n    const time = convertMs(timeRemaining);\n    updateTimerDisplay(time);\n  }, 1000);\n}\n\nstartButton.addEventListener('click', () => {\n  datetimePicker.disabled = true;\n  startButton.disabled = true;\n  startTimer();\n});\n"],"names":["userSelectedDate","startButton","datetimePicker","timerFields","options","selectedDates","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","updateTimerDisplay","startTimer","intervalId","timeRemaining","time"],"mappings":"wFAAA,IAAIA,EAAmB,KACvB,MAAMC,EAAc,SAAS,cAAc,oBAAoB,EACzDC,EAAiB,SAAS,eAAe,iBAAiB,EAC1DC,EAAc,CAClB,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEAF,EAAY,SAAW,GAEvB,MAAMG,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBL,EAAmBK,EAAc,CAAC,EAC9BL,GAAoB,IAAI,MAC1B,SAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDC,EAAY,SAAW,IAEvBA,EAAY,SAAW,EAE1B,CACH,EAEA,UAAUC,EAAgBE,CAAO,EAEjC,SAASE,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAmB,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7DR,EAAY,KAAK,YAAcS,EAAeJ,CAAI,EAClDL,EAAY,MAAM,YAAcS,EAAeH,CAAK,EACpDN,EAAY,QAAQ,YAAcS,EAAeF,CAAO,EACxDP,EAAY,QAAQ,YAAcS,EAAeD,CAAO,CAC1D,CAEA,SAASI,GAAa,CACpB,MAAMC,EAAa,YAAY,IAAM,CAEnC,MAAMC,EAAgBjB,EADV,IAAI,KAGhB,GAAIiB,GAAiB,EAAG,CACtB,cAAcD,CAAU,EACxBF,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEZ,EAAe,SAAW,GAC1BD,EAAY,SAAW,GACvB,MACD,CAED,MAAMiB,EAAOZ,EAAUW,CAAa,EACpCH,EAAmBI,CAAI,CACxB,EAAE,GAAI,CACT,CAEAjB,EAAY,iBAAiB,QAAS,IAAM,CAC1CC,EAAe,SAAW,GAC1BD,EAAY,SAAW,GACvBc,GACF,CAAC"}